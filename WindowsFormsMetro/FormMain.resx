<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_AI.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S8v6H0fvVOYCEXxhAAAAAElFTkSuQmCC
</value>
  </data>
</root>